---
import Base from "@layouts/Base.astro";
import { getTaxonomy } from "@utils/getAllTags";

const tags = await getTaxonomy("blog", "tags");

const textClasses: string[] = [
  "text-3xl text-cyan-600 font-sans font-semibold capitalize",
  "text-xl text-teal-600 font-sans font-semibold capitalize",
  "text-md text-red-600 font-sans font-semibold capitalize",
  "text-lg text-green-600 font-sans font-semibold capitalize",
  "text-sm text-orange-600 font-sans font-semibold capitalize",
  "text-lg text-blue-600 font-sans font-semibold capitalize",
  "text-4xl text-red-600 font-sans font-semibold capitalize",
  "text-xs text-yellow-600 font-sans font-semibold capitalize",
];

const getRandomClass = (classList: string[]): string => {
  const randomIndex: number = Math.floor(Math.random() * classList.length);
  return classList[randomIndex];
};
---

<Base>
  <section class="grid grid-cols-1">
    <h1 class="text-2xl md:text-3xl font-bold font-sans mb-8">Etiquetas:</h1>
  </section>
</Base>


{/*
    <video width="320" height="240" controls>
      <source src="/video/Scrimba.mp4" type="video/mp4">
      Tu navegador no soporta el elemento de video.
    </video>

    {
  "main": [
    {
      "name": "Home",
      "url": "/"
    },
    {
      "name": "Acerca de",
      "url": "/about"
    },
    {
      "name": "Etiquetas",
      "url": "/tags"
    },
    {
      "name": "Categor√≠as",
      "url": "/categories"
    }
  ]
}

<ul class="flex justify-center flex-wrap align-center gap-3">
  {
    tags.map((tag) => (
      <li>
        <a
          class={getRandomClass(textClasses)}
          href={`/tags/${tag.slug}`}
          title={`View posts with the tag: ${tag.name}`}
        >
          {tag.name}
        </a>
      </li>
    ))
  }
</ul>
*/}
